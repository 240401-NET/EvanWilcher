// <auto-generated />
using ASP_Project.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASP_Project.Migrations
{
    [DbContext(typeof(PokemonTrainerDbContext))]
    partial class PokemonTrainerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASP_Project.Model.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChosenAbility")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChosenTeraType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsShiny")
                        .HasColumnType("bit");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Pokemon__3214EC27E8401125");

                    b.HasIndex("TeamId");

                    b.ToTable("Pokemon", (string)null);
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonAbility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int")
                        .HasColumnName("PokemonID");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("URL");

                    b.HasKey("Id")
                        .HasName("PK__PokemonA__3214EC27B1C24632");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokemonAbility", (string)null);
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonHeldItem", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int")
                        .HasColumnName("PokemonID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sprite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PokemonId");

                    b.ToTable("PokemonHeldItem", (string)null);
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int")
                        .HasColumnName("PokemonID");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("URL");

                    b.HasKey("Id")
                        .HasName("PK__PokemonM__3214EC27777892D0");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokemonMove", (string)null);
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonMoveSet", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int")
                        .HasColumnName("PokemonID");

                    b.Property<string>("Move")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("move_#");

                    b.Property<string>("Move1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("move_1");

                    b.Property<string>("Move2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("move_2");

                    b.Property<string>("Move3")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("move_3");

                    b.HasKey("PokemonId")
                        .HasName("PK_MoveSet");

                    b.ToTable("PokemonMoveSet", (string)null);
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonSprite", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int")
                        .HasColumnName("PokemonID");

                    b.Property<string>("FrontDefault")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FrontFemale")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FrontShiny")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FrontShinyFemale")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PokemonId");

                    b.ToTable("PokemonSprite", (string)null);
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonStat", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("BaseStat")
                        .HasColumnType("int");

                    b.Property<int>("Effort")
                        .HasColumnType("int");

                    b.Property<int>("Individual")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int")
                        .HasColumnName("PokemonID");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokemonStat", (string)null);
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("name");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int")
                        .HasColumnName("TrainerID");

                    b.HasKey("Id")
                        .HasName("PK__PokemonT__3214EC27AE892B21");

                    b.HasIndex("TrainerId");

                    b.ToTable("PokemonTeam", (string)null);
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int")
                        .HasColumnName("PokemonID");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__PokemonT__3214EC27461BAB9A");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokemonType", (string)null);
                });

            modelBuilder.Entity("ASP_Project.Model.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Trainer__3214EC2797527C1D");

                    b.ToTable("Trainer", (string)null);
                });

            modelBuilder.Entity("ASP_Project.Model.Pokemon", b =>
                {
                    b.HasOne("ASP_Project.Model.PokemonTeam", "Team")
                        .WithMany("Pokemons")
                        .HasForeignKey("TeamId")
                        .IsRequired()
                        .HasConstraintName("FK__Pokemon__TeamID__06CD04F7");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonAbility", b =>
                {
                    b.HasOne("ASP_Project.Model.Pokemon", "Pokemon")
                        .WithMany("PokemonAbilities")
                        .HasForeignKey("PokemonId")
                        .IsRequired()
                        .HasConstraintName("FK_PokemonID_Ability");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonHeldItem", b =>
                {
                    b.HasOne("ASP_Project.Model.Pokemon", "Pokemon")
                        .WithOne("PokemonHeldItem")
                        .HasForeignKey("ASP_Project.Model.PokemonHeldItem", "PokemonId")
                        .IsRequired()
                        .HasConstraintName("FK_PokemonID_Item");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonMove", b =>
                {
                    b.HasOne("ASP_Project.Model.Pokemon", "Pokemon")
                        .WithMany("PokemonMoves")
                        .HasForeignKey("PokemonId")
                        .IsRequired()
                        .HasConstraintName("FK_PokemonID_Move");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonMoveSet", b =>
                {
                    b.HasOne("ASP_Project.Model.Pokemon", "Pokemon")
                        .WithOne("PokemonMoveSet")
                        .HasForeignKey("ASP_Project.Model.PokemonMoveSet", "PokemonId")
                        .IsRequired()
                        .HasConstraintName("FK_PokemonID_MoveSet");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonSprite", b =>
                {
                    b.HasOne("ASP_Project.Model.Pokemon", "Pokemon")
                        .WithOne("PokemonSprite")
                        .HasForeignKey("ASP_Project.Model.PokemonSprite", "PokemonId")
                        .IsRequired()
                        .HasConstraintName("FK_PokemonID_Sprite");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonStat", b =>
                {
                    b.HasOne("ASP_Project.Model.Pokemon", "Pokemon")
                        .WithMany("PokemonStats")
                        .HasForeignKey("PokemonId")
                        .IsRequired()
                        .HasConstraintName("FK_PokemonID_Stat");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonTeam", b =>
                {
                    b.HasOne("ASP_Project.Model.Trainer", "Trainer")
                        .WithMany("PokemonTeams")
                        .HasForeignKey("TrainerId")
                        .IsRequired()
                        .HasConstraintName("FK_TrainerID_Team");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonType", b =>
                {
                    b.HasOne("ASP_Project.Model.Pokemon", "Pokemon")
                        .WithMany("PokemonTypes")
                        .HasForeignKey("PokemonId")
                        .IsRequired()
                        .HasConstraintName("FK_PokemonID_Type");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("ASP_Project.Model.Pokemon", b =>
                {
                    b.Navigation("PokemonAbilities");

                    b.Navigation("PokemonHeldItem");

                    b.Navigation("PokemonMoveSet");

                    b.Navigation("PokemonMoves");

                    b.Navigation("PokemonSprite");

                    b.Navigation("PokemonStats");

                    b.Navigation("PokemonTypes");
                });

            modelBuilder.Entity("ASP_Project.Model.PokemonTeam", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("ASP_Project.Model.Trainer", b =>
                {
                    b.Navigation("PokemonTeams");
                });
#pragma warning restore 612, 618
        }
    }
}
